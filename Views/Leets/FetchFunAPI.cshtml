@{
    ViewData["Title"] = "Translator";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<script src="https://cdnjs.cloudflare.com/ajax/libs/jquery/3.3.1/jquery.min.js"></script>
<link rel="stylesheet" href="~/css/FunAPIMegaMenu.css" asp-append-version="true">
<link rel="stylesheet" href="~/css/FunAPIViewMenu.css" asp-append-version="true">

<body id="fetchView" onload="dashboardLoad()"></body>
//@using mindsprings.Models;
@model FunAPITranslateMultiModel;

<h1>Read Or Fetch Files</h1>
<div class="form-inline">
    <div class="form-group">
        <div class="input-group">
            <span><h5>Fun Translation</h5></span>
            <select id="fetchTextAPI" name="fetchTextAPI" class="dropsel">
                <option value="">Select</option>
                <option value="Yoda">Yoda API</option>
                <option value="Pirate">Pirate API</option>
                <option value="Valspeak">Valspeak API</option>
                <option value="Minion">Minion API</option>
                <option value="Ferb-latin">Ferb-latin API</option>
            </select>
            <button id="getShow" type="button" class="btn btn-warning"> <a
                    href="javascript:document.location.href='/Leets/FetchFunAPI?textAPI='+ document.getElementById('fetchTextAPI').value +'&IsDashboard=false'"
                    style="color: white; text-decoration-line: initial">With Show URL Link</a></button>
            <button id="getHide" type="button" class="btn btn-success"
                onclick="javascript:document.location.href='/Leets/FetchFunAPI?textAPI='+ document.getElementById('fetchTextAPI').value + '&IsDashboard=false'">With
                Hide URL Link</button>
            <div class="form-control d-flex justify-content-end">
            <input id="fetchSearch" type="search" onkeyup='saveValue(this); dashboardLoad()'>
            <button type="button" class="btn btn-primary" onchange="getSearchDataFromServer()">Search</button>
            </div>
        </div>
    </div>
 </div>

<form id="fetchViewFormDiv" class="listbg" enctype="multipart/form-data" action="/Leets/FetchFunAPI" method="GET">
    <div class="flex flex-row" id="showGetFiles">
    @if (Model.QueryHasConditionData != null) 
        {
            <table class="table table-striped">
                <thead>
                    <tr>
                        <th>Source</th>
                        <th>Picked API</th>
                        <th>Target</th>
                    </tr>
                </thead>
                <tbody>
                    @for (int i = 0; i < Model.QueryHasConditionData!.Count(); i++)
                    {
                        <tr>
                            <td>@Model.QueryHasConditionData![i].textSource</td>
                            <td>@Model.QueryHasConditionData[i].textAPI</td>
                            <td>@Model.QueryHasConditionData[i].textTarget</td>
                        </tr>
                    }
                </tbody>
            </table>
        }
        <input type="text" name="textAPI" id="fetchInputTextAPI" style="display:none">
        <input id="getIsFunAPIDashboard" name="isFunAPIDashboard" type="checkbox" value=false checked=false style="display:none"/>
        <input id="getSearchFromServer" type='submit' style="display:none"/> 
    </div>

    @for (int i = 1; i <= ViewBag.MaxPage; i++)
    {
        @if (ViewBag.Page == i)
        {
            <button class="btn btn-danger" style="width:40px; height:10px top:10px;" disabled>@i</button>
        }
        @if (ViewBag.Page != i)
        {
            <a href="@Url.Action("FetchFunAPI", new { textAPI=@Html.Raw(@ViewBag.fetchTextAPI), isFunDashboard=false, startPage = i })"
            class="btn btn-info" style="width:40px; height:10px top:10px;"> @i </a>
        }
    }

    @if (ViewBag.Page > 1)
    {
        <a href="@Url.Action("FetchFunAPI", new { textAPI=@Html.Raw(@ViewBag.fetchTextAPI), isFunDashboard=false, startPage = 1 })"
            class="btn btn-warning" style="display:inline-block;">&le; First</a>
        <a href="@Url.Action("FetchFunAPI", new { textAPI=@Html.Raw(@ViewBag.fetchTextAPI), isFunDashboard=false, startPage = ViewBag.Page - 1 })"
            class="btn btn-warning">&lt;&lt; Prev</a>
    }
    @if (ViewBag.Page < ViewBag.MaxPage)
    {
        <a href="@Url.Action("FetchFunAPI", new { textAPI=@Html.Raw(@ViewBag.fetchTextAPI), isFunDashboard=false, startPage = ViewBag.Page + 1 })"
            class="btn btn-warning">
            Next &gt;&gt;
        </a>
        <a href="@Url.Action("FetchFunAPI", new { textAPI=@Html.Raw(@ViewBag.fetchTextAPI), isFunDashboard=false, startPage = ViewBag.MaxPage })"
        class="btn btn-warning">
            Last &ge;
        </a>
    }
</form>


<script>
    //Get the user selected language for translation
    function getSearchDataFromServer() {
        document.getElementById("getIsFunAPIDashboard").checked = true;
        document.getElementById("getIsFunAPIDashboard").value = true;
        document.getElementById("getSearchFromServer").click();
    }


    function dashboardLoad() {
        document.getElementById("fetchTextAPI").value = '@Html.Raw(@ViewBag.fetchTextAPI)';
        document.getElementById("fetchSearch").value = getSavedValue("fetchSearch");
        
        if (document.getElementById("fetchSearch").value != "")
            document.getElementById("fetchSearch").focus();
        
        if (document.getElementById("FVTable"))
            document.getElementById('showGetFiles').removeChild(document.getElementById("FVTable"));

        var fetchViewTable = document.createElement('table');
        var fetchViewTHead = document.createElement('thead');
        //first row of the table
        var fetchViewTHeadTR = document.createElement('tr');
        var fetchViewTHeadTH1 = document.createElement('th');
        var fetchViewTHeadTH2 = document.createElement('th');
        var fetchViewTHeadTH3 = document.createElement('th');
        var fetchViewTBody = document.createElement('tbody');    
        
        fetchViewTable.className = "table table-striped";
        fetchViewTable.id="FVTable";
        fetchViewTHeadTH1.innerHTML = 'Source';
        fetchViewTHeadTH2.innerHTML = 'Picked API';
        fetchViewTHeadTH3.innerHTML = 'Target';

        fetchViewTHeadTR.appendChild(fetchViewTHeadTH1);
        fetchViewTHeadTR.appendChild(fetchViewTHeadTH2);
        fetchViewTHeadTR.appendChild(fetchViewTHeadTH3);

        fetchViewTHead.appendChild(fetchViewTHeadTR);
        fetchViewTable.appendChild(fetchViewTHead);
     
        @if (Model.QueryHasConditionData != null)
        { 
            @for (int i = 0; i < Model.QueryHasConditionData!.Count(); i++)
            {
            <text>
                if ('@(Model.QueryHasConditionData![i].textSource)'.toLowerCase().includes(getSavedValue("fetchSearch").toLowerCase())) {
                var fetchViewTBodyTR = document.createElement('tr');
                var fetchViewTBodyTD1 = document.createElement('td');
                var fetchViewTBodyTD2 = document.createElement('td');
                var fetchViewTBodyTD3 = document.createElement('td');

                fetchViewTBodyTD1.innerHTML = '@(Model.QueryHasConditionData![i].textSource)';
                fetchViewTBodyTD2.innerHTML = '@(Model.QueryHasConditionData![i].textAPI)';
                fetchViewTBodyTD3.innerHTML = '@(Model.QueryHasConditionData![i].textTarget)';

                fetchViewTBodyTR.appendChild(fetchViewTBodyTD1);
                fetchViewTBodyTR.appendChild(fetchViewTBodyTD2);
                fetchViewTBodyTR.appendChild(fetchViewTBodyTD3);
                fetchViewTBody.appendChild(fetchViewTBodyTR);     
            }
            </text>
            }
        }
        fetchViewTable.appendChild(fetchViewTBody);
        document.getElementById('showGetFiles').appendChild(fetchViewTable);
    }


    
    function saveValue(e) {
        var id = e.id;
        var val = e.value;
        localStorage.setItem(id, val);
    }

    function getSavedValue(v) {
        if (!localStorage.getItem(v)) {
            return "";
        }
        return localStorage.getItem(v);
        }        


 </script>